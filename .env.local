# ZKP2P TLSNotary Local Testing Configuration: Wise Server + Local Notary
# Copy this to .env for testing against actual Wise server with local notary

# ========================================
# REQUIRED: Wise Transaction Credentials
# ========================================

# Your actual Wise credentials
WISE_PROFILE_ID=12345678
WISE_TRANSACTION_ID=987654321

# Get these from browser dev tools when logged into wise.com:
# F12 -> Network tab -> Any wise.com request -> Headers
WISE_COOKIE="session_id=abc123def456; csrf_token=xyz789; other_cookies=here"
WISE_ACCESS_TOKEN=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.example_token_here

# ========================================
# WISE SERVER CONFIGURATION (Production)
# ========================================

# Use actual Wise production server
WISE_HOST=wise.com
WISE_PORT=443

# ========================================
# LOCAL NOTARY SERVER CONFIGURATION
# ========================================

# Point to your local notary server
NOTARY_HOST=127.0.0.1
NOTARY_PORT=7047
NOTARY_TLS=false

# ========================================
# TESTING SETUP INSTRUCTIONS
# ========================================
#
# Terminal 1 - Start Local Notary Server:
# git clone https://github.com/tlsnotary/tlsn.git
# cd tlsn
# cargo run --release --bin notary-server
#
# Terminal 2 - Run the dual-phase prover:
# cp .env.local .env
# # Edit .env with your actual Wise credentials
# cargo run --release --example attestation_prove -- wise-transaction
#
# SECURITY NOTES:
# - This connects to REAL Wise servers with LOCAL notary
# - Your Wise session data is processed locally
# - MPC-TLS ensures notary doesn't see plaintext data
# - Only for testing/development - never commit real credentials